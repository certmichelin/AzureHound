name: Publish

on:
  push:
    tags:
      - v*.*.*
env:
  AZUREHOUND_VERSION: ${{ github.ref_name }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - darwin
          - linux
          - windows
        arch:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Build
        run: 'go build -ldflags="-s -w -X github.com/bloodhoundad/azurehound/v2/constants.Version=${{ env.AZUREHOUND_VERSION }}"'
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Upload as Artifact
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: azurehound-bin-${{ matrix.os }}-${{ matrix.arch }}
          path: azurehound*

      - name: Zip
        run: 7z a -tzip -mx9 azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip azurehound*

      - name: Compute Checksum
        run: sha256sum azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip > azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip.sha256

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip
            azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip.sha256

  sign:
    runs-on: ubuntu-22.04 # INFO: https://docs.digicert.com/en/digicert-keylocker/code-signing/sign-with-third-party-signing-tools/windows-applications/sign-authenticode-files-with-osslsigncode-using-openssl-pkcs11-engine.html#a-note-for-ubuntu-users-488674
    needs: build
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.BHE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BHE_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: actions/download-artifact@v4
        with:
          pattern: azurehound-bin-*
          path: unsigned/

      - name: Install osslsigncode & pkcs11 engine
        run: |
          sudo apt-get update
          sudo apt-get install -y osslsigncode libengine-pkcs11-openssl

      - name: Install DigiCert Client Tools
        id: digicert
        uses: digicert/ssm-code-signing@v1.0.0

      - name: Set PKCS#11 Paths
        id: pkcs11
        run: |
          SM_TOOLS_DIR=$(dirname "$(realpath '${{ steps.digicert.outputs.PKCS11_CONFIG }}')")
          echo "module=${SM_TOOLS_DIR}/smpkcs11.so" >> "$GITHUB_OUTPUT"
          LIB_PKCS11="$(dpkg -L libengine-pkcs11-openssl | grep "libpkcs11.so")"
          echo "engine=$LIB_PKCS11" >> "$GITHUB_OUTPUT"

      - name: Sign Artifacts via DigiCert Signing Manager
        env:
          SM_HOST: ${{ secrets.SM_HOST }}
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
        run: |
          export SM_CLIENT_CERT_FILE=$(mktemp)
          printenv SM_CLIENT_CERT_FILE_B64 | base64 --decode > "$SM_CLIENT_CERT_FILE"
          trap 'rm $SM_CLIENT_CERT_FILE' EXIT

          mkdir signed
          for artifact in unsigned/azurehound-bin-*/azurehound*; do
            tgt=$(echo "$artifact" | sed -E 's%.*-([^-]*)/azurehound(.*)%azurehound-\1\2%')
            smctl sign --keypair-alias "${{ secrets.SM_KEYPAIR_ALIAS }}" --input "$artifact" --openssl-pkcs11-engine "${{ steps.pkcs11.outputs.engine }}" --pkcs11-module "${{ steps.pkcs11.outputs.module }}" --tool osslsigncode --verbose
            mv "$artifact" "signed/$tgt"
          done

      - name: Verify Signed Artifacts
        env:
          SM_HOST: ${{ secrets.SM_HOST }}
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
        run: |
          for artifact in signed/azurehound*; do
            smctl sign verify --fingerprint "${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}" --input "$artifact" --tool osslsigncode
          done

      - name: Upload Artifacts to S3
        run: |
          aws s3 cp --recursive signed/ s3://${{ secrets.BHE_AWS_BUCKET }}/azurehound-signed/${AZUREHOUND_VERSION}/

  containerize:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.PACKAGE_SCOPE }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/bloodhoundad/azurehound
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v

      - name: Build Container Image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: VERSION=${{ github.ref_name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.PACKAGE_SCOPE }}
