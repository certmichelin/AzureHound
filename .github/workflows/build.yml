name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Test
        run: go test ./...
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os:
          - darwin
          - linux
          - windows
        arch:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Build
        run: 'go build -ldflags="-s -w -X github.com/bloodhoundad/azurehound/v2/constants.Version=v0.0.0-rolling+${{ github.sha }}"'
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Zip
        if: "! startsWith(github.event_name, 'pull_request')"
        run: 7z a -tzip -mx9 azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip azurehound*

      - name: Compute Checksum
        if: "! startsWith(github.event_name, 'pull_request')"
        run: sha256sum azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip > azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip.sha256

      - name: Update Rolling Release
        if: "! startsWith(github.event_name, 'pull_request')"
        uses: softprops/action-gh-release@v1
        with:
          name: Rolling Release (unstable)
          tag_name: rolling
          prerelease: true
          files: |
            azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip
            azurehound-${{ matrix.os }}-${{ matrix.arch }}.zip.sha256
          body: |
            Rolling release of AzureHound compiled from source (${{ github.sha }})
            This is automatically kept up-to-date with the `${{ github.ref_name }}` ${{ github.ref_type }}
